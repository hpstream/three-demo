import{S as u,B as g,e as p,f as c,M as v,D as b,a as A,P as y,W as f,C as x}from"./three.module.f071c950.js";import{O as M}from"./OrbitControls.8ef26011.js";const l=document.querySelector("canvas.webgl");let d=new u;var r=new g(1,1,1);console.log(r.getAttribute("position"));r.translate(10,0,0);console.log(r.getAttribute("position"));const n=new p,P=new Float32Array([0,0,0,1,0,0,0,1,0]),S=new c(P,3);n.setAttribute("position",S);n.setAttribute("color",new c(new Float32Array([1,0,0,0,1,0,0,0,1]),3));console.log(n);const B=new v({vertexColors:!0,side:b}),w=new A(n,B);console.log(w);d.add(w);var i=window.innerWidth,s=window.innerHeight,C=i/s,t=new y(75,C);t.position.z=10;window.addEventListener("mousemove",e=>{e.clientX/i-.5,-(e.clientY/s-.5)});window.addEventListener("touchmove",e=>{e.changedTouches[0].clientX/i-.5,-(e.changedTouches[0].clientY/s-.5)});const m=new M(t,l);m.enableDamping=!0;window.addEventListener("resize",()=>{let e=window.innerWidth,a=window.innerHeight;t.aspect=e/a,t.updateProjectionMatrix(),o.setSize(e,a),o.setPixelRatio(Math.min(window.devicePixelRatio,2)),console.log("Update")});const o=new f({canvas:l});o.setSize(i,s);o.setPixelRatio(Math.min(window.devicePixelRatio,2));const R=new x,h=()=>{R.getElapsedTime(),m.update(),o.render(d,t),window.requestAnimationFrame(h)};h();
